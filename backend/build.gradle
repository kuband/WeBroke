plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.security:spring-security-bom:6.2.0'
		mavenBom 'org.springframework.security:spring-security-bom:6.2.0'
	}
}

dependencies {
	implementation(platform("software.amazon.awssdk:bom:2.23.3"))
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-data-ldap'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation("org.springframework.boot:spring-boot-starter-mail") {
		exclude group: 'jakarta.mail', module: 'spring-boot-starter-tomcat'
		exclude group: 'org.eclipse.angus', module: 'spring-boot-starter-tomcat'
	}
//	implementation 'org.springframework.boot:spring-boot-starter-graphql'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.security:spring-security-web'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.security:spring-security-messaging'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-gson:0.11.5'
	implementation 'jakarta.mail:jakarta.mail-api:2.1.2'
	implementation 'software.amazon.awssdk:s3'
	implementation 'software.amazon.awssdk:sso'
	implementation 'software.amazon.awssdk:ssooidc'
	implementation 'software.amazon.awssdk:s3'
	implementation 'com.stripe:stripe-java:24.22.0'
//	implementation 'org.apache.kafka:kafka-streams'
//	implementation 'org.springframework.kafka:spring-kafka'
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation(platform("org.junit:junit-bom:5.10.0"))
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
//	testImplementation 'org.springframework.graphql:spring-graphql-test'
//	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

tasks.named('test') {
	useJUnitPlatform()
}
