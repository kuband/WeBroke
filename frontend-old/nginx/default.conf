server {
  listen 80 default_server;
  server_name localhost;
  gzip on;
  gzip_comp_level 4;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  access_log    /var/log/nginx/access.log main;

  root /usr/share/nginx/html;

  # Add index.php to the list if you are using PHP
  index index.html index.htm;

  location / {
          # First attempt to serve request as file, then
          # as directory, then fall back to displaying a 404.
          try_files $uri$args $uri$args/ /index.html;
  }

  location /api {
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  location /actuator/health {
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  # Include the Elastic Beanstalk generated locations
  if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
      set $year $1;
      set $month $2;
      set $day $3;
      set $hour $4;
  }

  access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;

#   add valid ssl certificate here
#   listen 443 ssl http2;
#   ssl_certificate  /etc/nginx/ssl/tutorial.crt;
#   ssl_certificate_key /etc/nginx/ssl/tutorial.key;
}

# server {
#   listen 80;
#   server_name localhost;
#   return 301 https://$host$request_uri;
# }
